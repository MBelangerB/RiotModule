# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  # push:
  #    branches: ["dev"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  Riot_APIDevKey: ${{ secrets.RIOT_APIDEVKEY }}
  CacheEnabled: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  coverage:
    name: "Generate coverage"
    runs-on: ubuntu-latest
    environment: TestEnv

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
   # Setup .npmrc file to publish to npm
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install Typescript
      run: npm install typescript@4.8.4 -g
      
    - name: Install dependencies
      run: npm ci

    - name: Run Test Coverage
      run: npm run test:ts_html_coverage

    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
          name: test-coverage-pageResult
          path: "coverageHtml/**"
          retention-days: 1

  # Single deploy job since we're just deploying
  deploy_page:
    name: "Deploy coverage result on GitHub pages"
    needs: coverage
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
         
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-pageResult
          path: RiotModule          

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          # path: '.'
          path: './RiotModule'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
